WHITESPACE = _{ " " | "\t" }
NEWLINE = _{ "\n" | "\r\n" | "\r" }

program = { SOI ~ NEWLINE* ~ statement* ~ NEWLINE* ~EOI }
statement = { WHITESPACE* ~ ( print | move | turn | assign | loop | if ) ~ NEWLINE* }

print = { "print" ~ WHITESPACE+ ~ value }
move = { "move" ~ WHITESPACE+ ~ direction }
turn = { "turn" ~ WHITESPACE+ ~ side}
assign = { identifier ~ WHITESPACE* ~ "=" ~ WHITESPACE* ~ value }
loop = { "loop" ~ WHITESPACE+ ~ number ~ NEWLINE ~ WHITESPACE* ~ statement+ ~ NEWLINE ~ "end" }
if = { "if" ~ WHITESPACE+ ~ (condition | boolean) ~ NEWLINE ~ WHITESPACE* ~ statement+ ~ NEWLINE ~ "end" }
condition = { value ~ WHITESPACE* ~ ( "==" | "<" | ">" | "<=" | ">=" ) ~ WHITESPACE* ~ value }

value = { expr | string | number | boolean | identifier | direction }
side = @{ "\"left\"" | "\"right\"" }
direction = @{ "\"forward\"" | "\"back\"" | side | "\"up\"" | "\"down\"" }
string = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
number = @{ ASCII_DIGIT+ }
boolean = @{ "true" | "false" }
identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }

expr = { term ~ (WHITESPACE* ~ ("+" | "-") ~ WHITESPACE* ~ term)* }
term = { factor ~ (WHITESPACE* ~ ("*" | "/") ~ WHITESPACE* ~ factor)* }
factor = { number | identifier | "(" ~ WHITESPACE* ~ expr ~ WHITESPACE* ~ ")" }